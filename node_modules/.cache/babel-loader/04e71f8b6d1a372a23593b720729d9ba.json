{"ast":null,"code":"import _toConsumableArray from \"/Users/kyle/Documents/PROJECTS/Cinematix/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/kyle/Documents/PROJECTS/Cinematix/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kyle/Documents/PROJECTS/Cinematix/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/kyle/Documents/PROJECTS/Cinematix/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyle/Documents/PROJECTS/Cinematix/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyle/Documents/PROJECTS/Cinematix/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyle/Documents/PROJECTS/Cinematix/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyle/Documents/PROJECTS/Cinematix/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kyle/Documents/PROJECTS/Cinematix/src/App.js\";\nimport React, { Component } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { moviesData, queries, getData } from \"./services/movieService\";\nimport { getGenres } from \"./services/genreService\";\nimport http from \"./services/httpService\";\nimport Movies from \"./components/movies\";\nimport Dashboard from \"./components/dashboard\";\nimport notFound from \"./components/notFound\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.scss\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faIgloo } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faIgloo);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: [],\n      genres: [],\n      pageSize: 20,\n      currentPage: 1,\n      selectedGenre: null,\n      searchQuery: \"\",\n      sortValue: \"Popularity\",\n      loading: true,\n      bounce: true\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n    };\n\n    _this.handleGenreSelect = function (genre) {\n      _this.setState({\n        selectedGenre: genre,\n        currentPage: 1,\n        searchQuery: \"\"\n      });\n\n      _this.handleLoader(genre);\n    };\n\n    _this.handleSearch = function (query) {\n      _this.setState({\n        searchQuery: query,\n        selectedGenre: null,\n        currentPage: 1\n      });\n    };\n\n    _this.handleGenres = function (movie) {\n      return getGenres().map(function (m) {\n        return m.id === movie.genre_ids[0] ? m.name : null;\n      });\n    };\n\n    _this.handleSortValue = function (value) {\n      var sortMovies = \"popular_movies\",\n          query = queries.popular;\n\n      if (value === \"Top Rated\") {\n        sortMovies = \"top_movies\";\n        query = queries.top_rated;\n      } else if (value === \"Now Playing\") {\n        sortMovies = \"theaters_movies\";\n        query = queries.theaters;\n      }\n\n      _this.setState({\n        sortValue: value,\n        currentPage: 1\n      });\n\n      _this.fetchData(sortMovies, query);\n    };\n\n    _this.handleLoader = function (item) {\n      var _this$state = _this.state,\n          selectedGenre = _this$state.selectedGenre,\n          loading = _this$state.loading,\n          bounce = _this$state.bounce;\n\n      if (item === selectedGenre) {\n        loading = false;\n        bounce = false;\n      } else {\n        loading = true;\n        bounce = true;\n      }\n\n      setTimeout(function () {\n        return _this.setState({\n          loading: false\n        });\n      }, 1000);\n\n      _this.setState({\n        loading: loading,\n        bounce: bounce\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"fetchData\",\n    value: function () {\n      var _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(sortMovies, query) {\n        var data, movies;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                getData(sortMovies, query);\n                _context2.next = 3;\n                return Promise.all(moviesData[sortMovies].map(\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee(movie) {\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return http.get(movie);\n\n                          case 2:\n                            return _context.abrupt(\"return\", _context.sent);\n\n                          case 3:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, this);\n                  }));\n\n                  return function (_x3) {\n                    return _ref.apply(this, arguments);\n                  };\n                }()));\n\n              case 3:\n                data = _context2.sent;\n                movies = [].concat.apply([], data.map(function (movie) {\n                  return movie.data.results;\n                }));\n\n                if (movies.length > 200) {\n                  movies = movies.slice(0, 200);\n                }\n\n                this.setState({\n                  movies: movies\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetchData(_x, _x2) {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData(\"popular_movies\", queries.popular);\n      var genres = [{\n        id: \"\",\n        name: \"All genres\"\n      }].concat(_toConsumableArray(getGenres()));\n      this.setState({\n        genres: genres\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          movies = _this$state2.movies,\n          genres = _this$state2.genres,\n          pageSize = _this$state2.pageSize,\n          currentPage = _this$state2.currentPage,\n          selectedGenre = _this$state2.selectedGenre,\n          searchQuery = _this$state2.searchQuery,\n          sortValue = _this$state2.sortValue,\n          loading = _this$state2.loading,\n          bounce = _this$state2.bounce;\n      var allMovies = movies;\n      var filtered = allMovies;\n\n      if (searchQuery) {\n        filtered = allMovies.filter(function (m) {\n          return m.title.toLowerCase().includes(searchQuery.toLowerCase());\n        });\n      } else if (selectedGenre && selectedGenre.id) {\n        filtered = allMovies.filter(function (m) {\n          return m.genre_ids[0] === selectedGenre.id;\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(ToastContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(HashRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/movie/:id\",\n        component: Dashboard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/not-found\",\n        component: notFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        render: function render(props) {\n          return React.createElement(Movies, Object.assign({\n            filtered: filtered,\n            genres: genres,\n            pageSize: pageSize,\n            currentPage: currentPage,\n            searchQuery: searchQuery,\n            sortValue: sortValue,\n            selectedGenre: selectedGenre,\n            loading: loading,\n            bounce: bounce,\n            onPageChange: _this2.handlePageChange,\n            onGenreSelect: _this2.handleGenreSelect,\n            onSearch: _this2.handleSearch,\n            onGenres: _this2.handleGenres,\n            onSortValue: _this2.handleSortValue\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        to: \"/not-found\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/kyle/Documents/PROJECTS/Cinematix/src/App.js"],"names":["React","Component","HashRouter","Route","Switch","Redirect","ToastContainer","moviesData","queries","getData","getGenres","http","Movies","Dashboard","notFound","library","FontAwesomeIcon","faIgloo","add","App","state","movies","genres","pageSize","currentPage","selectedGenre","searchQuery","sortValue","loading","bounce","handlePageChange","page","setState","handleGenreSelect","genre","handleLoader","handleSearch","query","handleGenres","movie","map","m","id","genre_ids","name","handleSortValue","value","sortMovies","popular","top_rated","theaters","fetchData","item","setTimeout","Promise","all","get","data","concat","apply","results","length","slice","allMovies","filtered","filter","title","toLowerCase","includes","props"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,kBAApD;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,OAA9B,QAA6C,yBAA7C;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,uCAAP;AACA,OAAO,YAAP;AAEA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AAEAF,OAAO,CAACG,GAAR,CAAYD,OAAZ;;IAEME,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,WAAW,EAAE,CAJP;AAKNC,MAAAA,aAAa,EAAE,IALT;AAMNC,MAAAA,WAAW,EAAE,EANP;AAONC,MAAAA,SAAS,EAAE,YAPL;AAQNC,MAAAA,OAAO,EAAE,IARH;AASNC,MAAAA,MAAM,EAAE;AATF,K;;UAiCRC,gB,GAAmB,UAAAC,IAAI,EAAI;AACzB,YAAKC,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAEO;AAAf,OAAd;AACD,K;;UAEDE,iB,GAAoB,UAAAC,KAAK,EAAI;AAC3B,YAAKF,QAAL,CAAc;AAAEP,QAAAA,aAAa,EAAES,KAAjB;AAAwBV,QAAAA,WAAW,EAAE,CAArC;AAAwCE,QAAAA,WAAW,EAAE;AAArD,OAAd;;AACA,YAAKS,YAAL,CAAkBD,KAAlB;AACD,K;;UAEDE,Y,GAAe,UAAAC,KAAK,EAAI;AACtB,YAAKL,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAEW,KAAf;AAAsBZ,QAAAA,aAAa,EAAE,IAArC;AAA2CD,QAAAA,WAAW,EAAE;AAAxD,OAAd;AACD,K;;UAEDc,Y,GAAe,UAAAC,KAAK,EAAI;AACtB,aAAO7B,SAAS,GAAG8B,GAAZ,CAAgB,UAAAC,CAAC;AAAA,eAAKA,CAAC,CAACC,EAAF,KAASH,KAAK,CAACI,SAAN,CAAgB,CAAhB,CAAT,GAA8BF,CAAC,CAACG,IAAhC,GAAuC,IAA5C;AAAA,OAAjB,CAAP;AACD,K;;UAEDC,e,GAAkB,UAAAC,KAAK,EAAI;AACzB,UAAIC,UAAU,GAAG,gBAAjB;AAAA,UACEV,KAAK,GAAG7B,OAAO,CAACwC,OADlB;;AAGA,UAAIF,KAAK,KAAK,WAAd,EAA2B;AACzBC,QAAAA,UAAU,GAAG,YAAb;AACAV,QAAAA,KAAK,GAAG7B,OAAO,CAACyC,SAAhB;AACD,OAHD,MAGO,IAAIH,KAAK,KAAK,aAAd,EAA6B;AAClCC,QAAAA,UAAU,GAAG,iBAAb;AACAV,QAAAA,KAAK,GAAG7B,OAAO,CAAC0C,QAAhB;AACD;;AAED,YAAKlB,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAEmB,KAAb;AAAoBtB,QAAAA,WAAW,EAAE;AAAjC,OAAd;;AACA,YAAK2B,SAAL,CAAeJ,UAAf,EAA2BV,KAA3B;AACD,K;;UAEDF,Y,GAAe,UAAAiB,IAAI,EAAI;AAAA,wBACoB,MAAKhC,KADzB;AAAA,UACfK,aADe,eACfA,aADe;AAAA,UACAG,OADA,eACAA,OADA;AAAA,UACSC,MADT,eACSA,MADT;;AAErB,UAAIuB,IAAI,KAAK3B,aAAb,EAA4B;AAC1BG,QAAAA,OAAO,GAAG,KAAV;AACAC,QAAAA,MAAM,GAAG,KAAT;AACD,OAHD,MAGO;AACLD,QAAAA,OAAO,GAAG,IAAV;AACAC,QAAAA,MAAM,GAAG,IAAT;AACD;;AACDwB,MAAAA,UAAU,CAAC;AAAA,eAAM,MAAKrB,QAAL,CAAc;AAAEJ,UAAAA,OAAO,EAAE;AAAX,SAAd,CAAN;AAAA,OAAD,EAA0C,IAA1C,CAAV;;AACA,YAAKI,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAPA,OAAF;AAAWC,QAAAA,MAAM,EAANA;AAAX,OAAd;AACD,K;;;;;;;;;;iDAjEekB,U,EAAYV,K;;;;;;AAC1B5B,gBAAAA,OAAO,CAACsC,UAAD,EAAaV,KAAb,CAAP;;uBAEmBiB,OAAO,CAACC,GAAR,CACjBhD,UAAU,CAACwC,UAAD,CAAV,CAAuBP,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,2CAA2B,iBAAMD,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAqB5B,IAAI,CAAC6C,GAAL,CAASjB,KAAT,CAArB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA3B;;AAAA;AAAA;AAAA;AAAA,oBADiB,C;;;AAAbkB,gBAAAA,I;AAIFpC,gBAAAA,M,GAAS,GAAGqC,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBF,IAAI,CAACjB,GAAL,CAAS,UAAAD,KAAK;AAAA,yBAAIA,KAAK,CAACkB,IAAN,CAAWG,OAAf;AAAA,iBAAd,CAApB,C;;AACb,oBAAIvC,MAAM,CAACwC,MAAP,GAAgB,GAApB,EAAyB;AACvBxC,kBAAAA,MAAM,GAAGA,MAAM,CAACyC,KAAP,CAAa,CAAb,EAAgB,GAAhB,CAAT;AACD;;AAED,qBAAK9B,QAAL,CAAc;AAAEX,kBAAAA,MAAM,EAANA;AAAF,iBAAd;;;;;;;;;;;;;;;;;;wCAGkB;AAClB,WAAK8B,SAAL,CAAe,gBAAf,EAAiC3C,OAAO,CAACwC,OAAzC;AACA,UAAM1B,MAAM,IAAI;AAAEoB,QAAAA,EAAE,EAAE,EAAN;AAAUE,QAAAA,IAAI,EAAE;AAAhB,OAAJ,4BAAuClC,SAAS,EAAhD,EAAZ;AACA,WAAKsB,QAAL,CAAc;AAAEV,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD;;;6BAgDQ;AAAA;;AAAA,yBAWH,KAAKF,KAXF;AAAA,UAELC,MAFK,gBAELA,MAFK;AAAA,UAGLC,MAHK,gBAGLA,MAHK;AAAA,UAILC,QAJK,gBAILA,QAJK;AAAA,UAKLC,WALK,gBAKLA,WALK;AAAA,UAMLC,aANK,gBAMLA,aANK;AAAA,UAOLC,WAPK,gBAOLA,WAPK;AAAA,UAQLC,SARK,gBAQLA,SARK;AAAA,UASLC,OATK,gBASLA,OATK;AAAA,UAULC,MAVK,gBAULA,MAVK;AAaP,UAAMkC,SAAS,GAAG1C,MAAlB;AAEA,UAAI2C,QAAQ,GAAGD,SAAf;;AAEA,UAAIrC,WAAJ,EAAiB;AACfsC,QAAAA,QAAQ,GAAGD,SAAS,CAACE,MAAV,CAAiB,UAAAxB,CAAC;AAAA,iBAC3BA,CAAC,CAACyB,KAAF,CAAQC,WAAR,GAAsBC,QAAtB,CAA+B1C,WAAW,CAACyC,WAAZ,EAA/B,CAD2B;AAAA,SAAlB,CAAX;AAGD,OAJD,MAIO,IAAI1C,aAAa,IAAIA,aAAa,CAACiB,EAAnC,EAAuC;AAC5CsB,QAAAA,QAAQ,GAAGD,SAAS,CAACE,MAAV,CAAiB,UAAAxB,CAAC;AAAA,iBAAIA,CAAC,CAACE,SAAF,CAAY,CAAZ,MAAmBlB,aAAa,CAACiB,EAArC;AAAA,SAAlB,CAAX;AACD;;AAED,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,SAAS,EAAE7B,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,SAAS,EAAEC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,MAAM,EAAE,gBAAAuD,KAAK;AAAA,iBACX,oBAAC,MAAD;AACE,YAAA,QAAQ,EAAEL,QADZ;AAEE,YAAA,MAAM,EAAE1C,MAFV;AAGE,YAAA,QAAQ,EAAEC,QAHZ;AAIE,YAAA,WAAW,EAAEC,WAJf;AAKE,YAAA,WAAW,EAAEE,WALf;AAME,YAAA,SAAS,EAAEC,SANb;AAOE,YAAA,aAAa,EAAEF,aAPjB;AAQE,YAAA,OAAO,EAAEG,OARX;AASE,YAAA,MAAM,EAAEC,MATV;AAUE,YAAA,YAAY,EAAE,MAAI,CAACC,gBAVrB;AAWE,YAAA,aAAa,EAAE,MAAI,CAACG,iBAXtB;AAYE,YAAA,QAAQ,EAAE,MAAI,CAACG,YAZjB;AAaE,YAAA,QAAQ,EAAE,MAAI,CAACE,YAbjB;AAcE,YAAA,WAAW,EAAE,MAAI,CAACO;AAdpB,aAeMwB,KAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW;AAAA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EA0BE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BF,CADF,CADF,CAFF,CADF;AAqCD;;;;EA9IepE,S;;AAiJlB,eAAekB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { moviesData, queries, getData } from \"./services/movieService\";\nimport { getGenres } from \"./services/genreService\";\nimport http from \"./services/httpService\";\nimport Movies from \"./components/movies\";\nimport Dashboard from \"./components/dashboard\";\nimport notFound from \"./components/notFound\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.scss\";\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faIgloo } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faIgloo)\n\nclass App extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    pageSize: 20,\n    currentPage: 1,\n    selectedGenre: null,\n    searchQuery: \"\",\n    sortValue: \"Popularity\",\n    loading: true,\n    bounce: true\n  };\n\n  async fetchData(sortMovies, query) {\n    getData(sortMovies, query);\n\n    const data = await Promise.all(\n      moviesData[sortMovies].map(async movie => await http.get(movie))\n    );\n\n    let movies = [].concat.apply([], data.map(movie => movie.data.results));\n    if (movies.length > 200) {\n      movies = movies.slice(0, 200);\n    }\n\n    this.setState({ movies });\n  }\n\n  componentDidMount() {\n    this.fetchData(\"popular_movies\", queries.popular);\n    const genres = [{ id: \"\", name: \"All genres\" }, ...getGenres()];\n    this.setState({ genres });\n  }\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, currentPage: 1, searchQuery: \"\" });\n    this.handleLoader(genre);\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleGenres = movie => {\n    return getGenres().map(m => (m.id === movie.genre_ids[0] ? m.name : null));\n  };\n\n  handleSortValue = value => {\n    let sortMovies = \"popular_movies\",\n      query = queries.popular;\n\n    if (value === \"Top Rated\") {\n      sortMovies = \"top_movies\";\n      query = queries.top_rated;\n    } else if (value === \"Now Playing\") {\n      sortMovies = \"theaters_movies\";\n      query = queries.theaters;\n    }\n\n    this.setState({ sortValue: value, currentPage: 1 });\n    this.fetchData(sortMovies, query);\n  };\n\n  handleLoader = item => {\n    let { selectedGenre, loading, bounce } = this.state;\n    if (item === selectedGenre) {\n      loading = false;\n      bounce = false;\n    } else {\n      loading = true;\n      bounce = true;\n    }\n    setTimeout(() => this.setState({ loading: false }), 1000);\n    this.setState({ loading, bounce });\n  };\n\n  render() {\n    const {\n      movies,\n      genres,\n      pageSize,\n      currentPage,\n      selectedGenre,\n      searchQuery,\n      sortValue,\n      loading,\n      bounce\n    } = this.state;\n\n    const allMovies = movies;\n\n    let filtered = allMovies;\n\n    if (searchQuery) {\n      filtered = allMovies.filter(m =>\n        m.title.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    } else if (selectedGenre && selectedGenre.id) {\n      filtered = allMovies.filter(m => m.genre_ids[0] === selectedGenre.id);\n    }\n\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <React.Fragment>\n          <HashRouter>\n            <Switch>\n              <Route path=\"/movie/:id\" component={Dashboard} />\n              <Route path=\"/not-found\" component={notFound} />\n              <Route\n                path=\"/\"\n                exact\n                render={props => (\n                  <Movies\n                    filtered={filtered}\n                    genres={genres}\n                    pageSize={pageSize}\n                    currentPage={currentPage}\n                    searchQuery={searchQuery}\n                    sortValue={sortValue}\n                    selectedGenre={selectedGenre}\n                    loading={loading}\n                    bounce={bounce}\n                    onPageChange={this.handlePageChange}\n                    onGenreSelect={this.handleGenreSelect}\n                    onSearch={this.handleSearch}\n                    onGenres={this.handleGenres}\n                    onSortValue={this.handleSortValue}\n                    {...props}\n                  />\n                )}\n              />\n              <Redirect to=\"/not-found\" />\n            </Switch>\n          </HashRouter>\n        </React.Fragment>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}